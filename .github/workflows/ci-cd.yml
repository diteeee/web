name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for client
      - name: Set up Node.js for client
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install client dependencies
      - name: Install client dependencies
        working-directory: ./client
        run: npm install

      # Run client tests
      - name: Run client tests
        working-directory: ./client
        run: npm test -- --passWithNoTests

      # Build the client project (React app)
      - name: Build client project
        working-directory: ./client
        run: npm run build

      # Set up Node.js for server
      - name: Set up Node.js for server
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install server dependencies
      - name: Install server dependencies
        working-directory: ./server
        run: npm install

      # Run server tests (if any)
      - name: Run server tests
        working-directory: ./server
        run: npm test -- --passWithNoTests

      # Build Docker Image for Server
      - name: Build Docker Image for Server
        run: docker build -f server/Dockerfile -t ditua/my-app-server:latest .

      # Build Docker Image for Client
      - name: Build Docker Image for Client
        run: docker build -f client/Dockerfile -t ditua/my-app-client:latest ./client

      # Docker login
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Server Docker Image
      - name: Push Server Docker Image
        run: docker push ditua/my-app-server:latest

      # Push Client Docker Image
      - name: Push Client Docker Image
        run: docker push ditua/my-app-client:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Ensure Docker is running
      - name: Check Docker version
        run: docker --version

      # Ensure Docker Compose is running
      - name: Check Docker Compose version
        run: docker-compose --version

      # No need to navigate to a specific directory, stay in the root by default
      # Pull latest Docker images
      - name: Pull latest Docker images
        run: docker-compose pull

      # Deploy the containers
      - name: Deploy containers
        run: docker-compose up -d

      # Show Docker Compose logs
      - name: Show Docker Compose logs
        run: docker-compose logs